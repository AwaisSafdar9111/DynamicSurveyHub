{"ast":null,"code":"import { Injectable } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let FormService = /*#__PURE__*/(() => {\n  class FormService {\n    http;\n    apiUrl = 'http://localhost:8000/api';\n    constructor(http) {\n      this.http = http;\n    }\n    getForms() {\n      return this.http.get(`${this.apiUrl}/forms`);\n    }\n    getForm(id) {\n      return this.http.get(`${this.apiUrl}/forms/${id}`);\n    }\n    createForm(form) {\n      return this.http.post(`${this.apiUrl}/forms`, form);\n    }\n    updateForm(form) {\n      return this.http.put(`${this.apiUrl}/forms/${form.id}`, form);\n    }\n    deleteForm(id) {\n      return this.http.delete(`${this.apiUrl}/forms/${id}`);\n    }\n    publishForm(id) {\n      return this.http.post(`${this.apiUrl}/forms/${id}/publish`, {});\n    }\n    getSubmissions(formId) {\n      let url = `${this.apiUrl}/submissions`;\n      if (formId) {\n        url += `?formId=${formId}`;\n      }\n      return this.http.get(url);\n    }\n    getSubmission(id) {\n      return this.http.get(`${this.apiUrl}/submissions/${id}`);\n    }\n    createSubmission(submission) {\n      return this.http.post(`${this.apiUrl}/submissions`, submission);\n    }\n    updateSubmission(submission) {\n      return this.http.put(`${this.apiUrl}/submissions/${submission.id}`, submission);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({\n      minVersion: \"12.0.0\",\n      version: \"19.2.5\",\n      ngImport: i0,\n      type: FormService,\n      deps: [{\n        token: i1.HttpClient\n      }],\n      target: i0.ɵɵFactoryTarget.Injectable\n    });\n    static ɵprov = i0.ɵɵngDeclareInjectable({\n      minVersion: \"12.0.0\",\n      version: \"19.2.5\",\n      ngImport: i0,\n      type: FormService,\n      providedIn: 'root'\n    });\n  }\n  return FormService;\n})();\ni0.ɵɵngDeclareClassMetadata({\n  minVersion: \"12.0.0\",\n  version: \"19.2.5\",\n  ngImport: i0,\n  type: FormService,\n  decorators: [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }],\n  ctorParameters: () => [{\n    type: i1.HttpClient\n  }]\n});","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}