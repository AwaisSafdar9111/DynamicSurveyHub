{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../shared/services/workflow.service\";\nimport * as i3 from \"../../shared/services/form.service\";\nimport * as i4 from \"@angular/material/snack-bar\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/material/button\";\nimport * as i7 from \"@angular/material/card\";\nimport * as i8 from \"@angular/material/datepicker\";\nimport * as i9 from \"@angular/material/form-field\";\nimport * as i10 from \"@angular/material/icon\";\nimport * as i11 from \"@angular/material/input\";\nimport * as i12 from \"@angular/material/progress-spinner\";\nimport * as i13 from \"@angular/material/select\";\nimport * as i14 from \"@angular/material/table\";\nfunction WorkflowComponent_div_8_mat_option_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 20);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const form_r3 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", form_r3.id);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", form_r3.title, \" \");\n  }\n}\nfunction WorkflowComponent_div_8_mat_error_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Form is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction WorkflowComponent_div_8_mat_option_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 20);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const user_r4 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", user_r4.id);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", user_r4.name, \" \");\n  }\n}\nfunction WorkflowComponent_div_8_mat_error_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" User is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction WorkflowComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 7)(1, \"mat-card\")(2, \"mat-card-header\")(3, \"mat-card-title\");\n    i0.ɵɵtext(4, \"New Assignment\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"mat-card-content\")(6, \"form\", 8);\n    i0.ɵɵlistener(\"ngSubmit\", function WorkflowComponent_div_8_Template_form_ngSubmit_6_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.assignForm());\n    });\n    i0.ɵɵelementStart(7, \"div\", 9)(8, \"div\", 10)(9, \"mat-form-field\", 11)(10, \"mat-label\");\n    i0.ɵɵtext(11, \"Form\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"mat-select\", 12);\n    i0.ɵɵtemplate(13, WorkflowComponent_div_8_mat_option_13_Template, 2, 2, \"mat-option\", 13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(14, WorkflowComponent_div_8_mat_error_14_Template, 2, 0, \"mat-error\", 6);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(15, \"div\", 10)(16, \"mat-form-field\", 11)(17, \"mat-label\");\n    i0.ɵɵtext(18, \"Assign To\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"mat-select\", 14);\n    i0.ɵɵtemplate(20, WorkflowComponent_div_8_mat_option_20_Template, 2, 2, \"mat-option\", 13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(21, WorkflowComponent_div_8_mat_error_21_Template, 2, 0, \"mat-error\", 6);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(22, \"div\", 10)(23, \"mat-form-field\", 11)(24, \"mat-label\");\n    i0.ɵɵtext(25, \"Due Date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(26, \"input\", 15)(27, \"mat-datepicker-toggle\", 16)(28, \"mat-datepicker\", null, 0);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(30, \"div\", 17)(31, \"button\", 18);\n    i0.ɵɵlistener(\"click\", function WorkflowComponent_div_8_Template_button_click_31_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.toggleNewAssignmentForm());\n    });\n    i0.ɵɵtext(32, \"Cancel\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(33, \"button\", 19);\n    i0.ɵɵtext(34, \" Assign \");\n    i0.ɵɵelementEnd()()()()()();\n  }\n  if (rf & 2) {\n    let tmp_4_0;\n    let tmp_6_0;\n    const picker_r5 = i0.ɵɵreference(29);\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"formGroup\", ctx_r1.newAssignmentForm);\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.forms);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", (tmp_4_0 = ctx_r1.newAssignmentForm.get(\"formId\")) == null ? null : tmp_4_0.hasError(\"required\"));\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.users);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", (tmp_6_0 = ctx_r1.newAssignmentForm.get(\"userId\")) == null ? null : tmp_6_0.hasError(\"required\"));\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"matDatepicker\", picker_r5);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"for\", picker_r5);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"disabled\", ctx_r1.loading);\n  }\n}\nfunction WorkflowComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 21);\n    i0.ɵɵelement(1, \"mat-spinner\", 22);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction WorkflowComponent_div_10_th_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 35);\n    i0.ɵɵtext(1, \"Form\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction WorkflowComponent_div_10_td_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 36);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const assignment_r6 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r1.getFormTitle(assignment_r6.formId));\n  }\n}\nfunction WorkflowComponent_div_10_th_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 35);\n    i0.ɵɵtext(1, \"Assigned To\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction WorkflowComponent_div_10_td_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 36);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const assignment_r7 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r1.getUserName(assignment_r7.userId));\n  }\n}\nfunction WorkflowComponent_div_10_th_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 35);\n    i0.ɵɵtext(1, \"Assigned Date\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction WorkflowComponent_div_10_td_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 36);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const assignment_r8 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r1.formatDate(assignment_r8.assignedDate));\n  }\n}\nfunction WorkflowComponent_div_10_th_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 35);\n    i0.ɵɵtext(1, \"Due Date\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction WorkflowComponent_div_10_td_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 36);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const assignment_r9 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r1.formatDate(assignment_r9.dueDate));\n  }\n}\nfunction WorkflowComponent_div_10_th_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 35);\n    i0.ɵɵtext(1, \"Status\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction WorkflowComponent_div_10_td_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 36)(1, \"span\", 37);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const assignment_r10 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngClass\", ctx_r1.getStatusBadgeClass(assignment_r10.status));\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", assignment_r10.status, \" \");\n  }\n}\nfunction WorkflowComponent_div_10_th_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 35);\n    i0.ɵɵtext(1, \"Actions\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction WorkflowComponent_div_10_td_21_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"td\", 36)(1, \"button\", 38);\n    i0.ɵɵlistener(\"click\", function WorkflowComponent_div_10_td_21_Template_button_click_1_listener() {\n      const assignment_r12 = i0.ɵɵrestoreView(_r11).$implicit;\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.completeAssignment(assignment_r12.id));\n    });\n    i0.ɵɵelementStart(2, \"mat-icon\");\n    i0.ɵɵtext(3, \"check_circle\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"button\", 39);\n    i0.ɵɵlistener(\"click\", function WorkflowComponent_div_10_td_21_Template_button_click_4_listener() {\n      const assignment_r12 = i0.ɵɵrestoreView(_r11).$implicit;\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.deleteAssignment(assignment_r12.id));\n    });\n    i0.ɵɵelementStart(5, \"mat-icon\");\n    i0.ɵɵtext(6, \"delete\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const assignment_r12 = ctx.$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"disabled\", assignment_r12.status === \"Completed\");\n  }\n}\nfunction WorkflowComponent_div_10_tr_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tr\", 40);\n  }\n}\nfunction WorkflowComponent_div_10_tr_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tr\", 41);\n  }\n}\nfunction WorkflowComponent_div_10_div_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 42)(1, \"p\", 43);\n    i0.ɵɵtext(2, \"No assignments found\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction WorkflowComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"mat-card\")(2, \"mat-card-content\")(3, \"table\", 23);\n    i0.ɵɵelementContainerStart(4, 24);\n    i0.ɵɵtemplate(5, WorkflowComponent_div_10_th_5_Template, 2, 0, \"th\", 25)(6, WorkflowComponent_div_10_td_6_Template, 2, 1, \"td\", 26);\n    i0.ɵɵelementContainerEnd();\n    i0.ɵɵelementContainerStart(7, 27);\n    i0.ɵɵtemplate(8, WorkflowComponent_div_10_th_8_Template, 2, 0, \"th\", 25)(9, WorkflowComponent_div_10_td_9_Template, 2, 1, \"td\", 26);\n    i0.ɵɵelementContainerEnd();\n    i0.ɵɵelementContainerStart(10, 28);\n    i0.ɵɵtemplate(11, WorkflowComponent_div_10_th_11_Template, 2, 0, \"th\", 25)(12, WorkflowComponent_div_10_td_12_Template, 2, 1, \"td\", 26);\n    i0.ɵɵelementContainerEnd();\n    i0.ɵɵelementContainerStart(13, 29);\n    i0.ɵɵtemplate(14, WorkflowComponent_div_10_th_14_Template, 2, 0, \"th\", 25)(15, WorkflowComponent_div_10_td_15_Template, 2, 1, \"td\", 26);\n    i0.ɵɵelementContainerEnd();\n    i0.ɵɵelementContainerStart(16, 30);\n    i0.ɵɵtemplate(17, WorkflowComponent_div_10_th_17_Template, 2, 0, \"th\", 25)(18, WorkflowComponent_div_10_td_18_Template, 3, 2, \"td\", 26);\n    i0.ɵɵelementContainerEnd();\n    i0.ɵɵelementContainerStart(19, 31);\n    i0.ɵɵtemplate(20, WorkflowComponent_div_10_th_20_Template, 2, 0, \"th\", 25)(21, WorkflowComponent_div_10_td_21_Template, 7, 1, \"td\", 26);\n    i0.ɵɵelementContainerEnd();\n    i0.ɵɵtemplate(22, WorkflowComponent_div_10_tr_22_Template, 1, 0, \"tr\", 32)(23, WorkflowComponent_div_10_tr_23_Template, 1, 0, \"tr\", 33);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(24, WorkflowComponent_div_10_div_24_Template, 3, 0, \"div\", 34);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"dataSource\", ctx_r1.assignments);\n    i0.ɵɵadvance(19);\n    i0.ɵɵproperty(\"matHeaderRowDef\", ctx_r1.displayedColumns);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"matRowDefColumns\", ctx_r1.displayedColumns);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.assignments.length === 0);\n  }\n}\nexport class WorkflowComponent {\n  fb;\n  workflowService;\n  formService;\n  snackBar;\n  assignments = [];\n  forms = [];\n  users = [{\n    id: 'user1',\n    name: 'John Doe'\n  }, {\n    id: 'user2',\n    name: 'Jane Smith'\n  }, {\n    id: 'user3',\n    name: 'Bob Johnson'\n  }]; // In a real app, this would come from a user service\n  loading = false;\n  displayedColumns = ['formTitle', 'assignedTo', 'assignedDate', 'dueDate', 'status', 'actions'];\n  newAssignmentForm;\n  showNewAssignmentForm = false;\n  constructor(fb, workflowService, formService, snackBar) {\n    this.fb = fb;\n    this.workflowService = workflowService;\n    this.formService = formService;\n    this.snackBar = snackBar;\n    this.newAssignmentForm = this.fb.group({\n      formId: ['', Validators.required],\n      userId: ['', Validators.required],\n      dueDate: [null]\n    });\n  }\n  ngOnInit() {\n    this.loadAssignments();\n    this.loadForms();\n  }\n  loadAssignments() {\n    this.loading = true;\n    this.workflowService.getAssignments().subscribe({\n      next: assignments => {\n        this.assignments = assignments;\n        this.loading = false;\n      },\n      error: err => {\n        this.snackBar.open('Error loading assignments: ' + err.message, 'Close', {\n          duration: 3000\n        });\n        this.loading = false;\n      }\n    });\n  }\n  loadForms() {\n    this.formService.getForms().subscribe({\n      next: forms => {\n        this.forms = forms.filter(f => f.isPublished);\n      },\n      error: err => {\n        this.snackBar.open('Error loading forms: ' + err.message, 'Close', {\n          duration: 3000\n        });\n      }\n    });\n  }\n  toggleNewAssignmentForm() {\n    this.showNewAssignmentForm = !this.showNewAssignmentForm;\n    if (!this.showNewAssignmentForm) {\n      this.newAssignmentForm.reset();\n    }\n  }\n  assignForm() {\n    if (this.newAssignmentForm.invalid) {\n      this.snackBar.open('Please complete all required fields', 'Close', {\n        duration: 3000\n      });\n      return;\n    }\n    const formValue = this.newAssignmentForm.value;\n    const assignment = {\n      id: 0,\n      formId: formValue.formId,\n      userId: formValue.userId,\n      assignedDate: new Date(),\n      dueDate: formValue.dueDate ? new Date(formValue.dueDate) : undefined,\n      status: 'Assigned'\n    };\n    this.loading = true;\n    this.workflowService.createAssignment(assignment).subscribe({\n      next: response => {\n        this.assignments.push(response);\n        this.snackBar.open('Form assigned successfully', 'Close', {\n          duration: 3000\n        });\n        this.toggleNewAssignmentForm();\n        this.loading = false;\n      },\n      error: err => {\n        this.snackBar.open('Error assigning form: ' + err.message, 'Close', {\n          duration: 3000\n        });\n        this.loading = false;\n      }\n    });\n  }\n  completeAssignment(id) {\n    this.loading = true;\n    this.workflowService.completeAssignment(id).subscribe({\n      next: response => {\n        const index = this.assignments.findIndex(a => a.id === id);\n        if (index !== -1) {\n          this.assignments[index] = response;\n        }\n        this.snackBar.open('Assignment marked as completed', 'Close', {\n          duration: 3000\n        });\n        this.loading = false;\n      },\n      error: err => {\n        this.snackBar.open('Error completing assignment: ' + err.message, 'Close', {\n          duration: 3000\n        });\n        this.loading = false;\n      }\n    });\n  }\n  deleteAssignment(id) {\n    this.loading = true;\n    this.workflowService.deleteAssignment(id).subscribe({\n      next: () => {\n        this.assignments = this.assignments.filter(a => a.id !== id);\n        this.snackBar.open('Assignment deleted successfully', 'Close', {\n          duration: 3000\n        });\n        this.loading = false;\n      },\n      error: err => {\n        this.snackBar.open('Error deleting assignment: ' + err.message, 'Close', {\n          duration: 3000\n        });\n        this.loading = false;\n      }\n    });\n  }\n  getFormTitle(formId) {\n    const form = this.forms.find(f => f.id === formId);\n    return form ? form.title : `Form #${formId}`;\n  }\n  getUserName(userId) {\n    const user = this.users.find(u => u.id === userId);\n    return user ? user.name : userId;\n  }\n  formatDate(date) {\n    return date ? new Date(date).toLocaleDateString() : 'Not set';\n  }\n  getStatusBadgeClass(status) {\n    switch (status) {\n      case 'Assigned':\n        return 'badge-primary';\n      case 'InProgress':\n        return 'badge-warning';\n      case 'Completed':\n        return 'badge-success';\n      default:\n        return 'badge-secondary';\n    }\n  }\n  static ɵfac = function WorkflowComponent_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || WorkflowComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.WorkflowService), i0.ɵɵdirectiveInject(i3.FormService), i0.ɵɵdirectiveInject(i4.MatSnackBar));\n  };\n  static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: WorkflowComponent,\n    selectors: [[\"app-workflow\"]],\n    standalone: false,\n    decls: 11,\n    vars: 3,\n    consts: [[\"picker\", \"\"], [1, \"container\", \"mt-4\"], [1, \"d-flex\", \"justify-content-between\", \"align-items-center\", \"mb-4\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 3, \"click\"], [\"class\", \"mb-4\", 4, \"ngIf\"], [\"class\", \"d-flex justify-content-center\", 4, \"ngIf\"], [4, \"ngIf\"], [1, \"mb-4\"], [3, \"ngSubmit\", \"formGroup\"], [1, \"row\"], [1, \"col-md-4\"], [1, \"w-100\"], [\"formControlName\", \"formId\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"formControlName\", \"userId\"], [\"matInput\", \"\", \"formControlName\", \"dueDate\", 3, \"matDatepicker\"], [\"matSuffix\", \"\", 3, \"for\"], [1, \"text-right\"], [\"mat-button\", \"\", \"type\", \"button\", 3, \"click\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\", 3, \"disabled\"], [3, \"value\"], [1, \"d-flex\", \"justify-content-center\"], [\"diameter\", \"40\"], [\"mat-table\", \"\", 1, \"w-100\", 3, \"dataSource\"], [\"matColumnDef\", \"formTitle\"], [\"mat-header-cell\", \"\", 4, \"matHeaderCellDef\"], [\"mat-cell\", \"\", 4, \"matCellDef\"], [\"matColumnDef\", \"assignedTo\"], [\"matColumnDef\", \"assignedDate\"], [\"matColumnDef\", \"dueDate\"], [\"matColumnDef\", \"status\"], [\"matColumnDef\", \"actions\"], [\"mat-header-row\", \"\", 4, \"matHeaderRowDef\"], [\"mat-row\", \"\", 4, \"matRowDef\", \"matRowDefColumns\"], [\"class\", \"p-4 text-center\", 4, \"ngIf\"], [\"mat-header-cell\", \"\"], [\"mat-cell\", \"\"], [1, \"badge\", 3, \"ngClass\"], [\"mat-icon-button\", \"\", \"color\", \"accent\", 3, \"click\", \"disabled\"], [\"mat-icon-button\", \"\", \"color\", \"warn\", 3, \"click\"], [\"mat-header-row\", \"\"], [\"mat-row\", \"\"], [1, \"p-4\", \"text-center\"], [1, \"text-muted\"]],\n    template: function WorkflowComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 1)(1, \"div\", 2)(2, \"h1\");\n        i0.ɵɵtext(3, \"Form Assignments\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"button\", 3);\n        i0.ɵɵlistener(\"click\", function WorkflowComponent_Template_button_click_4_listener() {\n          return ctx.toggleNewAssignmentForm();\n        });\n        i0.ɵɵelementStart(5, \"mat-icon\");\n        i0.ɵɵtext(6, \"add\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(7, \" Assign Form \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(8, WorkflowComponent_div_8_Template, 35, 8, \"div\", 4)(9, WorkflowComponent_div_9_Template, 2, 0, \"div\", 5)(10, WorkflowComponent_div_10_Template, 25, 4, \"div\", 6);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngIf\", ctx.showNewAssignmentForm);\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"ngIf\", ctx.loading);\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"ngIf\", !ctx.loading);\n      }\n    },\n    dependencies: [i5.NgClass, i5.NgForOf, i5.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i6.MatButton, i6.MatIconButton, i7.MatCard, i7.MatCardContent, i7.MatCardHeader, i7.MatCardTitle, i8.MatDatepicker, i8.MatDatepickerInput, i8.MatDatepickerToggle, i9.MatFormField, i9.MatLabel, i9.MatError, i9.MatSuffix, i10.MatIcon, i11.MatInput, i12.MatProgressSpinner, i13.MatSelect, i13.MatOption, i14.MatTable, i14.MatHeaderCellDef, i14.MatHeaderRowDef, i14.MatColumnDef, i14.MatCellDef, i14.MatRowDef, i14.MatHeaderCell, i14.MatCell, i14.MatHeaderRow, i14.MatRow],\n    encapsulation: 2\n  });\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}