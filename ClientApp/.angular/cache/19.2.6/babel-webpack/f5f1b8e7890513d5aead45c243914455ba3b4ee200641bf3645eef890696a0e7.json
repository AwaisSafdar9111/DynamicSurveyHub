{"ast":null,"code":"import { Validators, FormControl } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"../../../shared/services/form.service\";\nimport * as i4 from \"@angular/material/snack-bar\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/material/button\";\nimport * as i7 from \"@angular/material/card\";\nimport * as i8 from \"@angular/material/checkbox\";\nimport * as i9 from \"@angular/material/form-field\";\nimport * as i10 from \"@angular/material/icon\";\nimport * as i11 from \"@angular/material/input\";\nimport * as i12 from \"@angular/material/radio\";\nimport * as i13 from \"@angular/material/select\";\nfunction FormPreviewComponent_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6);\n    i0.ɵɵelement(1, \"mat-spinner\", 7);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction FormPreviewComponent_div_14_p_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r1.form.description);\n  }\n}\nfunction FormPreviewComponent_div_14_div_6_mat_card_subtitle_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-card-subtitle\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const section_r3 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(section_r3.description);\n  }\n}\nfunction FormPreviewComponent_div_14_div_6_div_7_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 18)(1, \"div\", 19);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const control_r4 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", control_r4.configuration.noteText, \" \");\n  }\n}\nfunction FormPreviewComponent_div_14_div_6_div_7_mat_form_field_2_mat_error_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" This field is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction FormPreviewComponent_div_14_div_6_div_7_mat_form_field_2_mat_error_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const control_r4 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" Value is below minimum allowed (\", control_r4.configuration.minValue, \") \");\n  }\n}\nfunction FormPreviewComponent_div_14_div_6_div_7_mat_form_field_2_mat_error_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const control_r4 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" Value is above maximum allowed (\", control_r4.configuration.maxValue, \") \");\n  }\n}\nfunction FormPreviewComponent_div_14_div_6_div_7_mat_form_field_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-form-field\", 20)(1, \"mat-label\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"input\", 21);\n    i0.ɵɵtemplate(4, FormPreviewComponent_div_14_div_6_div_7_mat_form_field_2_mat_error_4_Template, 2, 0, \"mat-error\", 5)(5, FormPreviewComponent_div_14_div_6_div_7_mat_form_field_2_mat_error_5_Template, 2, 1, \"mat-error\", 5)(6, FormPreviewComponent_div_14_div_6_div_7_mat_form_field_2_mat_error_6_Template, 2, 1, \"mat-error\", 5);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    let tmp_10_0;\n    let tmp_11_0;\n    let tmp_12_0;\n    const control_r4 = i0.ɵɵnextContext().$implicit;\n    const ctx_r1 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(control_r4.label);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"formControlName\", \"control_\" + control_r4.id)(\"type\", control_r4.configuration.inputType === \"Number\" ? \"number\" : control_r4.configuration.inputType === \"Email\" ? \"email\" : \"text\")(\"disabled\", !ctx_r1.controlEnabled[control_r4.id]);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", (tmp_10_0 = ctx_r1.formGroup.get(\"control_\" + control_r4.id)) == null ? null : tmp_10_0.hasError(\"required\"));\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", (tmp_11_0 = ctx_r1.formGroup.get(\"control_\" + control_r4.id)) == null ? null : tmp_11_0.hasError(\"min\"));\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", (tmp_12_0 = ctx_r1.formGroup.get(\"control_\" + control_r4.id)) == null ? null : tmp_12_0.hasError(\"max\"));\n  }\n}\nfunction FormPreviewComponent_div_14_div_6_div_7_mat_form_field_3_mat_error_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" This field is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction FormPreviewComponent_div_14_div_6_div_7_mat_form_field_3_mat_error_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const control_r4 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" Maximum length exceeded (\", control_r4.configuration.maxLength, \" characters) \");\n  }\n}\nfunction FormPreviewComponent_div_14_div_6_div_7_mat_form_field_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-form-field\", 20)(1, \"mat-label\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"textarea\", 22);\n    i0.ɵɵtemplate(4, FormPreviewComponent_div_14_div_6_div_7_mat_form_field_3_mat_error_4_Template, 2, 0, \"mat-error\", 5)(5, FormPreviewComponent_div_14_div_6_div_7_mat_form_field_3_mat_error_5_Template, 2, 1, \"mat-error\", 5);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    let tmp_9_0;\n    let tmp_10_0;\n    const control_r4 = i0.ɵɵnextContext().$implicit;\n    const ctx_r1 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(control_r4.label);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"formControlName\", \"control_\" + control_r4.id)(\"disabled\", !ctx_r1.controlEnabled[control_r4.id]);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", (tmp_9_0 = ctx_r1.formGroup.get(\"control_\" + control_r4.id)) == null ? null : tmp_9_0.hasError(\"required\"));\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", (tmp_10_0 = ctx_r1.formGroup.get(\"control_\" + control_r4.id)) == null ? null : tmp_10_0.hasError(\"maxlength\"));\n  }\n}\nfunction FormPreviewComponent_div_14_div_6_div_7_div_4_span_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 27);\n    i0.ɵɵtext(1, \"*\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction FormPreviewComponent_div_14_div_6_div_7_div_4_mat_radio_button_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-radio-button\", 28);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const option_r5 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", option_r5.value);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", option_r5.text, \" \");\n  }\n}\nfunction FormPreviewComponent_div_14_div_6_div_7_div_4_mat_error_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" This field is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction FormPreviewComponent_div_14_div_6_div_7_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 23);\n    i0.ɵɵtext(2);\n    i0.ɵɵtemplate(3, FormPreviewComponent_div_14_div_6_div_7_div_4_span_3_Template, 2, 0, \"span\", 24);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"mat-radio-group\", 25);\n    i0.ɵɵtemplate(5, FormPreviewComponent_div_14_div_6_div_7_div_4_mat_radio_button_5_Template, 2, 2, \"mat-radio-button\", 26);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(6, FormPreviewComponent_div_14_div_6_div_7_div_4_mat_error_6_Template, 2, 0, \"mat-error\", 5);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    let tmp_11_0;\n    const control_r4 = i0.ɵɵnextContext().$implicit;\n    const ctx_r1 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", control_r4.label, \" \");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", control_r4.isRequired);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"formControlName\", \"control_\" + control_r4.id)(\"disabled\", !ctx_r1.controlEnabled[control_r4.id]);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", control_r4.options);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ((tmp_11_0 = ctx_r1.formGroup.get(\"control_\" + control_r4.id)) == null ? null : tmp_11_0.hasError(\"required\")) && ((tmp_11_0 = ctx_r1.formGroup.get(\"control_\" + control_r4.id)) == null ? null : tmp_11_0.touched));\n  }\n}\nfunction FormPreviewComponent_div_14_div_6_div_7_div_5_span_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 27);\n    i0.ɵɵtext(1, \"*\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction FormPreviewComponent_div_14_div_6_div_7_div_5_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 30)(1, \"mat-checkbox\", 31);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const option_r6 = ctx.$implicit;\n    const control_r4 = i0.ɵɵnextContext(2).$implicit;\n    const ctx_r1 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"value\", option_r6.value)(\"disabled\", !ctx_r1.controlEnabled[control_r4.id]);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", option_r6.text, \" \");\n  }\n}\nfunction FormPreviewComponent_div_14_div_6_div_7_div_5_mat_error_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" This field is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction FormPreviewComponent_div_14_div_6_div_7_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 23);\n    i0.ɵɵtext(2);\n    i0.ɵɵtemplate(3, FormPreviewComponent_div_14_div_6_div_7_div_5_span_3_Template, 2, 0, \"span\", 24);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(4, FormPreviewComponent_div_14_div_6_div_7_div_5_div_4_Template, 3, 3, \"div\", 29)(5, FormPreviewComponent_div_14_div_6_div_7_div_5_mat_error_5_Template, 2, 0, \"mat-error\", 5);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    let tmp_9_0;\n    const control_r4 = i0.ɵɵnextContext().$implicit;\n    const ctx_r1 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", control_r4.label, \" \");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", control_r4.isRequired);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", control_r4.options);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ((tmp_9_0 = ctx_r1.formGroup.get(\"control_\" + control_r4.id)) == null ? null : tmp_9_0.hasError(\"required\")) && ((tmp_9_0 = ctx_r1.formGroup.get(\"control_\" + control_r4.id)) == null ? null : tmp_9_0.touched));\n  }\n}\nfunction FormPreviewComponent_div_14_div_6_div_7_mat_form_field_6_mat_option_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 34);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const option_r7 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", option_r7.value);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", option_r7.text, \" \");\n  }\n}\nfunction FormPreviewComponent_div_14_div_6_div_7_mat_form_field_6_mat_error_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" This field is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction FormPreviewComponent_div_14_div_6_div_7_mat_form_field_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-form-field\", 20)(1, \"mat-label\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"mat-select\", 32);\n    i0.ɵɵtemplate(4, FormPreviewComponent_div_14_div_6_div_7_mat_form_field_6_mat_option_4_Template, 2, 2, \"mat-option\", 33);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(5, FormPreviewComponent_div_14_div_6_div_7_mat_form_field_6_mat_error_5_Template, 2, 0, \"mat-error\", 5);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    let tmp_11_0;\n    const control_r4 = i0.ɵɵnextContext().$implicit;\n    const ctx_r1 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(control_r4.label);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"formControlName\", \"control_\" + control_r4.id)(\"multiple\", control_r4.configuration.selectionType === \"Multiple\")(\"disabled\", !ctx_r1.controlEnabled[control_r4.id]);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", control_r4.options);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", (tmp_11_0 = ctx_r1.formGroup.get(\"control_\" + control_r4.id)) == null ? null : tmp_11_0.hasError(\"required\"));\n  }\n}\nfunction FormPreviewComponent_div_14_div_6_div_7_div_7_span_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 27);\n    i0.ɵɵtext(1, \"*\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction FormPreviewComponent_div_14_div_6_div_7_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 23);\n    i0.ɵɵtext(2);\n    i0.ɵɵtemplate(3, FormPreviewComponent_div_14_div_6_div_7_div_7_span_3_Template, 2, 0, \"span\", 24);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"button\", 35)(5, \"mat-icon\");\n    i0.ɵɵtext(6, \"cloud_upload\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(7, \" Upload File \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"p\", 36);\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const control_r4 = i0.ɵɵnextContext().$implicit;\n    const ctx_r1 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", control_r4.label, \" \");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", control_r4.isRequired);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"disabled\", !ctx_r1.controlEnabled[control_r4.id]);\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\" Accepted file types: \", (control_r4.configuration.acceptedFileTypes == null ? null : control_r4.configuration.acceptedFileTypes.join(\", \")) || \"All files\", \" \");\n  }\n}\nfunction FormPreviewComponent_div_14_div_6_div_7_div_8_span_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 27);\n    i0.ɵɵtext(1, \"*\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction FormPreviewComponent_div_14_div_6_div_7_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 23);\n    i0.ɵɵtext(2);\n    i0.ɵɵtemplate(3, FormPreviewComponent_div_14_div_6_div_7_div_8_span_3_Template, 2, 0, \"span\", 24);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 37)(5, \"p\", 38)(6, \"mat-icon\");\n    i0.ɵɵtext(7, \"draw\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(8, \" Sign here \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(9, \"div\", 39)(10, \"button\", 40);\n    i0.ɵɵtext(11, \" Clear Signature \");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const control_r4 = i0.ɵɵnextContext().$implicit;\n    const ctx_r1 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", control_r4.label, \" \");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", control_r4.isRequired);\n    i0.ɵɵadvance();\n    i0.ɵɵclassProp(\"disabled\", !ctx_r1.controlEnabled[control_r4.id]);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"disabled\", !ctx_r1.controlEnabled[control_r4.id]);\n  }\n}\nfunction FormPreviewComponent_div_14_div_6_div_7_div_9_span_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 27);\n    i0.ɵɵtext(1, \"*\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction FormPreviewComponent_div_14_div_6_div_7_div_9_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 42)(1, \"div\", 43)(2, \"p\", 38);\n    i0.ɵɵtext(3, \"Map would appear here\");\n    i0.ɵɵelementEnd()()();\n  }\n}\nfunction FormPreviewComponent_div_14_div_6_div_7_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 23);\n    i0.ɵɵtext(2);\n    i0.ɵɵtemplate(3, FormPreviewComponent_div_14_div_6_div_7_div_9_span_3_Template, 2, 0, \"span\", 24);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"button\", 35)(5, \"mat-icon\");\n    i0.ɵɵtext(6, \"location_on\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(7, \" Capture Location \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(8, FormPreviewComponent_div_14_div_6_div_7_div_9_div_8_Template, 4, 0, \"div\", 41);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const control_r4 = i0.ɵɵnextContext().$implicit;\n    const ctx_r1 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", control_r4.label, \" \");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", control_r4.isRequired);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"disabled\", !ctx_r1.controlEnabled[control_r4.id]);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", control_r4.configuration.showMap && ctx_r1.controlEnabled[control_r4.id]);\n  }\n}\nfunction FormPreviewComponent_div_14_div_6_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 15);\n    i0.ɵɵtemplate(1, FormPreviewComponent_div_14_div_6_div_7_div_1_Template, 3, 1, \"div\", 16)(2, FormPreviewComponent_div_14_div_6_div_7_mat_form_field_2_Template, 7, 7, \"mat-form-field\", 17)(3, FormPreviewComponent_div_14_div_6_div_7_mat_form_field_3_Template, 6, 5, \"mat-form-field\", 17)(4, FormPreviewComponent_div_14_div_6_div_7_div_4_Template, 7, 6, \"div\", 5)(5, FormPreviewComponent_div_14_div_6_div_7_div_5_Template, 6, 4, \"div\", 5)(6, FormPreviewComponent_div_14_div_6_div_7_mat_form_field_6_Template, 6, 6, \"mat-form-field\", 17)(7, FormPreviewComponent_div_14_div_6_div_7_div_7_Template, 10, 4, \"div\", 5)(8, FormPreviewComponent_div_14_div_6_div_7_div_8_Template, 12, 5, \"div\", 5)(9, FormPreviewComponent_div_14_div_6_div_7_div_9_Template, 9, 4, \"div\", 5);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const control_r4 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"hidden\", !ctx_r1.controlVisibility[control_r4.id]);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", control_r4.type === \"Note\");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", control_r4.type === \"Text\");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", control_r4.type === \"Textarea\");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", control_r4.type === \"RadioGroup\");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", control_r4.type === \"CheckboxGroup\");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", control_r4.type === \"Dropdown\");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", control_r4.type === \"FileUpload\");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", control_r4.type === \"Signature\");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", control_r4.type === \"LocationPicker\");\n  }\n}\nfunction FormPreviewComponent_div_14_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 13)(1, \"mat-card\")(2, \"mat-card-header\")(3, \"mat-card-title\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(5, FormPreviewComponent_div_14_div_6_mat_card_subtitle_5_Template, 2, 1, \"mat-card-subtitle\", 5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"mat-card-content\");\n    i0.ɵɵtemplate(7, FormPreviewComponent_div_14_div_6_div_7_Template, 10, 10, \"div\", 14);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const section_r3 = ctx.$implicit;\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(section_r3.title);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", section_r3.description);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", section_r3.controls);\n  }\n}\nfunction FormPreviewComponent_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 8)(2, \"h2\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(4, FormPreviewComponent_div_14_p_4_Template, 2, 1, \"p\", 5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"form\", 9);\n    i0.ɵɵlistener(\"ngSubmit\", function FormPreviewComponent_div_14_Template_form_ngSubmit_5_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onSubmit());\n    });\n    i0.ɵɵtemplate(6, FormPreviewComponent_div_14_div_6_Template, 8, 3, \"div\", 10);\n    i0.ɵɵelementStart(7, \"div\", 11)(8, \"button\", 12);\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r1.form.title);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.form.description);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"formGroup\", ctx_r1.formGroup);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.form.sections);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"disabled\", ctx_r1.previewMode && ctx_r1.formGroup.invalid);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.previewMode ? \"Validate Form\" : \"Submit Form\", \" \");\n  }\n}\nexport let FormPreviewComponent = /*#__PURE__*/(() => {\n  class FormPreviewComponent {\n    route;\n    router;\n    fb;\n    formService;\n    snackBar;\n    formId;\n    form = null;\n    formGroup;\n    loading = false;\n    previewMode = true;\n    // For tracking conditional display\n    controlVisibility = {};\n    controlEnabled = {};\n    constructor(route, router, fb, formService, snackBar) {\n      this.route = route;\n      this.router = router;\n      this.fb = fb;\n      this.formService = formService;\n      this.snackBar = snackBar;\n      this.formId = 0;\n      this.formGroup = this.fb.group({});\n    }\n    ngOnInit() {\n      this.route.paramMap.subscribe(params => {\n        const idParam = params.get('id');\n        if (idParam) {\n          this.formId = +idParam;\n          this.loadForm(this.formId);\n        } else {\n          this.router.navigate(['/forms']);\n        }\n      });\n    }\n    loadForm(id) {\n      this.loading = true;\n      this.formService.getForm(id).subscribe({\n        next: form => {\n          this.form = form;\n          this.initFormControls();\n          this.loading = false;\n        },\n        error: err => {\n          this.snackBar.open('Error loading form: ' + err.message, 'Close', {\n            duration: 3000\n          });\n          this.loading = false;\n          this.router.navigate(['/forms']);\n        }\n      });\n    }\n    initFormControls() {\n      if (!this.form) return;\n      // Create a new form group\n      const formGroup = this.fb.group({});\n      // Initialize control visibility\n      this.controlVisibility = {};\n      this.controlEnabled = {};\n      // Process each section and its controls\n      this.form.sections.forEach(section => {\n        section.controls.forEach(control => {\n          // Skip note controls as they don't have input\n          if (control.type === 'Note') {\n            this.controlVisibility[control.id] = true;\n            this.controlEnabled[control.id] = true;\n            return;\n          }\n          // Create form control based on type\n          let validators = control.isRequired ? [Validators.required] : [];\n          let defaultValue = null;\n          switch (control.type) {\n            case 'Text':\n              defaultValue = '';\n              if (control.configuration.inputType === 'Number') {\n                validators = [...validators, control.configuration.minValue !== null ? Validators.min(control.configuration.minValue) : null, control.configuration.maxValue !== null ? Validators.max(control.configuration.maxValue) : null].filter(Boolean);\n              }\n              break;\n            case 'Textarea':\n              defaultValue = '';\n              if (control.configuration.maxLength) {\n                validators.push(Validators.maxLength(control.configuration.maxLength));\n              }\n              break;\n            case 'RadioGroup':\n              defaultValue = null;\n              break;\n            case 'CheckboxGroup':\n            case 'Dropdown':\n              defaultValue = control.configuration.selectionType === 'Multiple' ? [] : null;\n              break;\n            case 'FileUpload':\n              defaultValue = null;\n              break;\n            case 'Signature':\n              defaultValue = null;\n              break;\n            case 'LocationPicker':\n              defaultValue = null;\n              break;\n          }\n          formGroup.addControl(`control_${control.id}`, new FormControl(defaultValue, validators));\n          // Initialize visibility based on conditions\n          this.controlVisibility[control.id] = this.evaluateControlVisibility(control);\n          this.controlEnabled[control.id] = this.evaluateControlEnabled(control);\n        });\n      });\n      // Register value changes to handle conditional logic\n      formGroup.valueChanges.subscribe(() => {\n        this.evaluateAllConditions();\n      });\n      this.formGroup = formGroup;\n    }\n    evaluateAllConditions() {\n      if (!this.form) return;\n      this.form.sections.forEach(section => {\n        section.controls.forEach(control => {\n          this.controlVisibility[control.id] = this.evaluateControlVisibility(control);\n          this.controlEnabled[control.id] = this.evaluateControlEnabled(control);\n        });\n      });\n    }\n    evaluateControlVisibility(control) {\n      if (!control.conditions || control.conditions.length === 0) {\n        return true;\n      }\n      // Check hide conditions first\n      const hideConditions = control.conditions.filter(c => c.action === 'Hide');\n      for (const condition of hideConditions) {\n        if (this.evaluateCondition(condition)) {\n          return false;\n        }\n      }\n      // Then check show conditions\n      const showConditions = control.conditions.filter(c => c.action === 'Show');\n      if (showConditions.length === 0) {\n        return true;\n      }\n      for (const condition of showConditions) {\n        if (this.evaluateCondition(condition)) {\n          return true;\n        }\n      }\n      return false;\n    }\n    evaluateControlEnabled(control) {\n      if (!control.conditions || control.conditions.length === 0) {\n        return true;\n      }\n      // Check disable conditions first\n      const disableConditions = control.conditions.filter(c => c.action === 'Disable');\n      for (const condition of disableConditions) {\n        if (this.evaluateCondition(condition)) {\n          return false;\n        }\n      }\n      // Then check enable conditions\n      const enableConditions = control.conditions.filter(c => c.action === 'Enable');\n      if (enableConditions.length === 0) {\n        return true;\n      }\n      for (const condition of enableConditions) {\n        if (this.evaluateCondition(condition)) {\n          return true;\n        }\n      }\n      return false;\n    }\n    evaluateCondition(condition) {\n      const sourceControlValue = this.formGroup.get(`control_${condition.sourceControlId}`)?.value;\n      if (sourceControlValue === null || sourceControlValue === undefined) {\n        return false;\n      }\n      switch (condition.operator) {\n        case 'Equals':\n          return sourceControlValue === condition.value;\n        case 'NotEquals':\n          return sourceControlValue !== condition.value;\n        case 'Contains':\n          if (Array.isArray(sourceControlValue)) {\n            return sourceControlValue.includes(condition.value);\n          }\n          return String(sourceControlValue).includes(condition.value);\n        case 'GreaterThan':\n          return Number(sourceControlValue) > Number(condition.value);\n        case 'LessThan':\n          return Number(sourceControlValue) < Number(condition.value);\n        default:\n          return false;\n      }\n    }\n    onSubmit() {\n      if (this.formGroup.invalid) {\n        this.snackBar.open('Please fill in all required fields correctly', 'Close', {\n          duration: 3000\n        });\n        return;\n      }\n      if (!this.form) return;\n      // In preview mode, just show success message\n      if (this.previewMode) {\n        this.snackBar.open('Form is valid! In a real submission, this would be saved.', 'Close', {\n          duration: 3000\n        });\n        return;\n      }\n      // Prepare submission data\n      const formValues = this.formGroup.value;\n      const responses = [];\n      this.form.sections.forEach(section => {\n        section.controls.forEach(control => {\n          // Skip note controls and hidden controls\n          if (control.type === 'Note' || !this.controlVisibility[control.id]) {\n            return;\n          }\n          const controlValue = formValues[`control_${control.id}`];\n          if (controlValue !== null && controlValue !== undefined) {\n            const response = {\n              id: 0,\n              submissionId: 0,\n              controlId: control.id,\n              value: ''\n            };\n            switch (control.type) {\n              case 'CheckboxGroup':\n              case 'Dropdown':\n                if (control.configuration.selectionType === 'Multiple' && Array.isArray(controlValue)) {\n                  response.optionIds = controlValue;\n                  response.value = controlValue.join(',');\n                } else {\n                  response.optionIds = [controlValue];\n                  response.value = controlValue;\n                }\n                break;\n              case 'LocationPicker':\n                // In a real app, we would get lat/long from a map component\n                response.latitude = 0;\n                response.longitude = 0;\n                response.value = '0,0';\n                break;\n              case 'FileUpload':\n                // In a real app, we would have file URLs\n                response.fileUrls = ['example.com/file1.pdf'];\n                response.value = 'example.com/file1.pdf';\n                break;\n              case 'Signature':\n                // In a real app, we would have signature image URL\n                response.signatureUrl = 'example.com/signature.svg';\n                response.value = 'example.com/signature.svg';\n                break;\n              default:\n                response.value = controlValue;\n            }\n            responses.push(response);\n          }\n        });\n      });\n      const submission = {\n        id: 0,\n        formId: this.form.id,\n        submittedBy: 'current-user',\n        // In a real app, get from auth service\n        submittedDate: new Date(),\n        responses\n      };\n      this.loading = true;\n      this.formService.createSubmission(submission).subscribe({\n        next: () => {\n          this.snackBar.open('Form submitted successfully', 'Close', {\n            duration: 3000\n          });\n          this.loading = false;\n          this.router.navigate(['/submissions']);\n        },\n        error: err => {\n          this.snackBar.open('Error submitting form: ' + err.message, 'Close', {\n            duration: 3000\n          });\n          this.loading = false;\n        }\n      });\n    }\n    togglePreviewMode() {\n      this.previewMode = !this.previewMode;\n    }\n    backToBuilder() {\n      this.router.navigate(['/forms', this.formId]);\n    }\n    static ɵfac = function FormPreviewComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || FormPreviewComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.FormService), i0.ɵɵdirectiveInject(i4.MatSnackBar));\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: FormPreviewComponent,\n      selectors: [[\"app-form-preview\"]],\n      decls: 15,\n      vars: 5,\n      consts: [[1, \"container\", \"mt-4\"], [1, \"d-flex\", \"justify-content-between\", \"align-items-center\", \"mb-4\"], [\"mat-raised-button\", \"\", \"color\", \"basic\", 3, \"click\"], [\"mat-raised-button\", \"\", \"color\", \"accent\", 1, \"ml-2\", 3, \"click\"], [\"class\", \"d-flex justify-content-center\", 4, \"ngIf\"], [4, \"ngIf\"], [1, \"d-flex\", \"justify-content-center\"], [\"diameter\", \"40\"], [1, \"form-header\", \"mb-4\"], [3, \"ngSubmit\", \"formGroup\"], [\"class\", \"mb-4\", 4, \"ngFor\", \"ngForOf\"], [1, \"form-actions\", \"mt-4\", \"mb-5\", \"text-right\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\", 3, \"disabled\"], [1, \"mb-4\"], [\"class\", \"mb-3\", 3, \"hidden\", 4, \"ngFor\", \"ngForOf\"], [1, \"mb-3\", 3, \"hidden\"], [\"class\", \"note-control\", 4, \"ngIf\"], [\"class\", \"w-100\", 4, \"ngIf\"], [1, \"note-control\"], [1, \"alert\", \"alert-info\"], [1, \"w-100\"], [\"matInput\", \"\", 3, \"formControlName\", \"type\", \"disabled\"], [\"matInput\", \"\", \"rows\", \"4\", 3, \"formControlName\", \"disabled\"], [1, \"form-label\"], [\"class\", \"required-marker\", 4, \"ngIf\"], [3, \"formControlName\", \"disabled\"], [\"class\", \"d-block mb-2\", 3, \"value\", 4, \"ngFor\", \"ngForOf\"], [1, \"required-marker\"], [1, \"d-block\", \"mb-2\", 3, \"value\"], [\"class\", \"mb-2\", 4, \"ngFor\", \"ngForOf\"], [1, \"mb-2\"], [3, \"value\", \"disabled\"], [3, \"formControlName\", \"multiple\", \"disabled\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\"], [\"mat-raised-button\", \"\", \"color\", \"basic\", \"type\", \"button\", 3, \"disabled\"], [1, \"text-muted\", \"small\", \"mt-1\"], [1, \"signature-pad\", \"mt-2\", \"p-2\", \"border\", \"rounded\"], [1, \"text-center\", \"text-muted\"], [1, \"text-right\", \"mt-2\"], [\"mat-button\", \"\", \"type\", \"button\", \"color\", \"warn\", 3, \"disabled\"], [\"class\", \"mt-2\", 4, \"ngIf\"], [1, \"mt-2\"], [1, \"location-map-placeholder\"]],\n      template: function FormPreviewComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h1\");\n          i0.ɵɵtext(3);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(4, \"div\")(5, \"button\", 2);\n          i0.ɵɵlistener(\"click\", function FormPreviewComponent_Template_button_click_5_listener() {\n            return ctx.backToBuilder();\n          });\n          i0.ɵɵelementStart(6, \"mat-icon\");\n          i0.ɵɵtext(7, \"arrow_back\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtext(8, \" Back to Builder \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(9, \"button\", 3);\n          i0.ɵɵlistener(\"click\", function FormPreviewComponent_Template_button_click_9_listener() {\n            return ctx.togglePreviewMode();\n          });\n          i0.ɵɵelementStart(10, \"mat-icon\");\n          i0.ɵɵtext(11);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtext(12);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵtemplate(13, FormPreviewComponent_div_13_Template, 2, 0, \"div\", 4)(14, FormPreviewComponent_div_14_Template, 10, 6, \"div\", 5);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(3);\n          i0.ɵɵtextInterpolate(ctx.previewMode ? \"Form Preview\" : \"Form Submission\");\n          i0.ɵɵadvance(8);\n          i0.ɵɵtextInterpolate(ctx.previewMode ? \"edit\" : \"visibility\");\n          i0.ɵɵadvance();\n          i0.ɵɵtextInterpolate1(\" \", ctx.previewMode ? \"Switch to Submission Mode\" : \"Switch to Preview Mode\", \" \");\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.loading);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", !ctx.loading && ctx.form);\n        }\n      },\n      dependencies: [i5.NgForOf, i5.NgIf, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName, i6.MatButton, i7.MatCard, i7.MatCardContent, i7.MatCardHeader, i7.MatCardSubtitle, i7.MatCardTitle, i8.MatCheckbox, i9.MatFormField, i9.MatLabel, i9.MatError, i10.MatIcon, i11.MatInput, i12.MatRadioGroup, i12.MatRadioButton, i13.MatSelect, i13.MatOption],\n      encapsulation: 2\n    });\n  }\n  return FormPreviewComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}