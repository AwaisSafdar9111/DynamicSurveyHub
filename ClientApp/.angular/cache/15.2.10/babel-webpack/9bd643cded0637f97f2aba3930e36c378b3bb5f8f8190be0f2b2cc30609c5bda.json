{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ControlService {\n  http;\n  apiUrl = 'http://localhost:8000/api';\n  constructor(http) {\n    this.http = http;\n  }\n  getControls(sectionId) {\n    return this.http.get(`${this.apiUrl}/sections/${sectionId}/controls`);\n  }\n  getControl(id) {\n    return this.http.get(`${this.apiUrl}/controls/${id}`);\n  }\n  createControl(control) {\n    return this.http.post(`${this.apiUrl}/sections/${control.sectionId}/controls`, control);\n  }\n  updateControl(control) {\n    return this.http.put(`${this.apiUrl}/controls/${control.id}`, control);\n  }\n  deleteControl(id) {\n    return this.http.delete(`${this.apiUrl}/controls/${id}`);\n  }\n  updateControlOrder(sectionId, controlIds) {\n    return this.http.post(`${this.apiUrl}/sections/${sectionId}/controls/order`, {\n      controlIds\n    });\n  }\n  // Control Options\n  getControlOptions(controlId) {\n    return this.http.get(`${this.apiUrl}/controls/${controlId}/options`);\n  }\n  createControlOption(option) {\n    return this.http.post(`${this.apiUrl}/controls/${option.controlId}/options`, option);\n  }\n  updateControlOption(option) {\n    return this.http.put(`${this.apiUrl}/controloptions/${option.id}`, option);\n  }\n  deleteControlOption(id) {\n    return this.http.delete(`${this.apiUrl}/controloptions/${id}`);\n  }\n  // Control Conditions\n  getControlConditions(controlId) {\n    return this.http.get(`${this.apiUrl}/controls/${controlId}/conditions`);\n  }\n  createControlCondition(condition) {\n    return this.http.post(`${this.apiUrl}/controls/${condition.controlId}/conditions`, condition);\n  }\n  updateControlCondition(condition) {\n    return this.http.put(`${this.apiUrl}/controlconditions/${condition.id}`, condition);\n  }\n  deleteControlCondition(id) {\n    return this.http.delete(`${this.apiUrl}/controlconditions/${id}`);\n  }\n  static ɵfac = function ControlService_Factory(t) {\n    return new (t || ControlService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ControlService,\n    factory: ControlService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}